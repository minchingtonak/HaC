// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDomainNameservers(args: GetDomainNameserversArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainNameserversResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("porkbun:index/getDomainNameservers:getDomainNameservers", {
        "domain": args.domain,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomainNameservers.
 */
export interface GetDomainNameserversArgs {
    domain: string;
}

/**
 * A collection of values returned by getDomainNameservers.
 */
export interface GetDomainNameserversResult {
    readonly domain: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameservers: string[];
}
export function getDomainNameserversOutput(args: GetDomainNameserversOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDomainNameserversResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("porkbun:index/getDomainNameservers:getDomainNameservers", {
        "domain": args.domain,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomainNameservers.
 */
export interface GetDomainNameserversOutputArgs {
    domain: pulumi.Input<string>;
}
