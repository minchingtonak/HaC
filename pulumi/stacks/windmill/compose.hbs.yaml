x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "${LOG_MAX_SIZE:-20m}"
    max-file: "${LOG_MAX_FILE:-10}"
    compress: "true"

services:
  db:
    deploy:
      replicas: 1
    image: postgres:16
    shm_size: 1g
    restart: unless-stopped
    volumes:
      - /docker/windmill/db:/var/lib/postgresql/data
    expose:
      - 8000
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${WINDMILL_DB_PASSWORD}
      POSTGRES_DB: windmill
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

  windmill_server:
    image: ${WM_IMAGE}
    pull_policy: always
    deploy:
      replicas: 1
    restart: unless-stopped
    expose:
      - 8000
      - 2525
    # ports:
    #   - 8000:8000
    #   - 2525:2525 # SMTP
    environment:
      - DATABASE_URL=${WINDMILL_DB_URL}
      - MODE=server
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /docker/windmill/logs:/tmp/windmill/logs
    logging: *default-logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.windmill.rule=Host(`windmill.{{{PARENT:CONTAINER_DOMAIN}}}`)
      - traefik.http.routers.windmill.entrypoints=https
      - traefik.http.routers.windmill.tls=true
      - traefik.http.routers.windmill.tls.certresolver=porkbun
      - traefik.http.routers.windmill.service=windmill
      - traefik.http.services.windmill.loadbalancer.server.port=8000
    networks:
      - traefik

  windmill_worker:
    image: ${WM_IMAGE}
    pull_policy: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
          # for GB, use syntax '2Gi'
    restart: unless-stopped
    environment:
      - DATABASE_URL=${WINDMILL_DB_URL}
      - MODE=worker
      - WORKER_GROUP=default
    depends_on:
      db:
        condition: service_healthy
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/windmill/cache:/tmp/windmill/cache
      - /docker/windmill/logs:/tmp/windmill/logs
    logging: *default-logging

  ## This worker is specialized for "native" jobs. Native jobs run in-process and thus are much more lightweight than other jobs
  windmill_worker_native:
    # Use ghcr.io/windmill-labs/windmill-ee:main for the ee
    image: ${WM_IMAGE}
    pull_policy: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
          # for GB, use syntax '2Gi'
    restart: unless-stopped
    environment:
      - DATABASE_URL=${WINDMILL_DB_URL}
      - MODE=worker
      - WORKER_GROUP=native
      - NUM_WORKERS=2
      - SLEEP_QUEUE=200
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /docker/windmill/logs:/tmp/windmill/logs
    logging: *default-logging

  # This worker is specialized for reports or scraping jobs. It is assigned the "reports" worker group which has an init script that installs chromium and can be targeted by using the "chromium" worker tag.
  windmill_worker_reports:
    image: ${WM_IMAGE}
    pull_policy: always
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 2048M
          # for GB, use syntax '2Gi'
    restart: unless-stopped
    environment:
      - DATABASE_URL=${WINDMILL_DB_URL}
      - MODE=worker
      - WORKER_GROUP=reports
    depends_on:
      db:
        condition: service_healthy
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/windmill/cache:/tmp/windmill/cache
      - /docker/windmill/logs:/tmp/windmill/logs

  lsp:
    image: ghcr.io/windmill-labs/windmill-lsp:latest
    pull_policy: always
    restart: unless-stopped
    expose:
      - 3001
    ports:
      - 3001:3001
    volumes:
      - /docker/windmill/lsp-cache:/pyls/.cache
    logging: *default-logging

networks:
  traefik:
    external: true
