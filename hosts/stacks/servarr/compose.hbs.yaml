services:
  gluetun:
    image: qmcgaw/gluetun:v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    # ports:
    #   - 8081:8081 # qbittorrent web interface
    #   - 6881:6881 # qbittorrent torrent port
    #   - 8080:8080 # sabnzbd
    volumes:
      - /docker/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=airvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY={{{SECRET_WIREGUARD_PRIVATE_KEY}}}
      - WIREGUARD_PRESHARED_KEY={{{SECRET_WIREGUARD_PRESHARED_KEY}}}
      - WIREGUARD_ADDRESSES={{{SECRET_WIREGUARD_ADDRESSES}}}
      - FIREWALL_VPN_INPUT_PORTS=29730
      - SERVER_COUNTRIES=United States
      - HEALTH_VPN_DURATION_INITIAL=120s
    depends_on:
      deunhealth:
        condition: service_started
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 60s
      timeout: 20s
      retries: 5
    restart: unless-stopped
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.qbittorrent.rule=Host(`{{{domainForApp "qbittorrent"}}}`)
      - traefik.http.routers.qbittorrent.entrypoints=https
      - traefik.http.routers.qbittorrent.tls=true
      - traefik.http.routers.qbittorrent.tls.certresolver=porkbun
      - traefik.http.routers.qbittorrent.service=qbittorrent
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8081
      #
      - traefik.tcp.routers.qbittorrent-bittorrent.rule=HostSNI(`*`)
      - traefik.tcp.routers.qbittorrent-bittorrent.entrypoints=qbittorrent-6881-tcp
      - traefik.tcp.routers.qbittorrent-bittorrent.service=qbittorrent-bittorrent
      - traefik.tcp.services.qbittorrent-bittorrent.loadbalancer.server.port=6881
      #
      - traefik.http.routers.sabnzbd.rule=Host(`{{{domainForApp "sabnzbd"}}}`)
      - traefik.http.routers.sabnzbd.entrypoints=https
      - traefik.http.routers.sabnzbd.tls=true
      - traefik.http.routers.sabnzbd.tls.certresolver=porkbun
      - traefik.http.routers.sabnzbd.service=sabnzbd
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
    networks:
      - traefik

  deunhealth:
    image: qmcgaw/deunhealth:latest@sha256:fca3832ace35e3c028d3ec2e6271ac1161ed302b75b34e9dd01db1c106a25802
    container_name: deunhealth
    network_mode: "none"
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=America/Los_Angeles
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent:5.1.2@sha256:5f3785f8d8cd27d509cd948a06195306c3d951b1e1e123e46c7be40ecfb6965f
    container_name: qbittorrent
    restart: unless-stopped
    labels:
      - deunhealth.restart.on.unhealthy=true
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Los_Angeles
      - WEBUI_PORT=8081
      - TORRENTING_PORT=29730
    volumes:
      - /docker/qbittorrent:/config
      - /mnt/media:/data
    network_mode: service:gluetun
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 60s
      retries: 3
      start_period: 20s
      timeout: 10s

  sabnzbd:
    image: ghcr.io/linuxserver/sabnzbd:4.5.3@sha256:b425e5f48e13aabb7c6d9e37579629925ad44f77ae0d841edfd776399457f671
    container_name: sabnzbd
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Los_Angeles
    volumes:
      - /docker/sabnzbd:/config
      - /mnt/media:/data
    restart: unless-stopped
    network_mode: service:gluetun
    labels:
      - deunhealth.restart.on.unhealthy=true
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - --timeout=3
        - --tries=1
        - --spider
        - http://localhost:8080/
      interval: 10s
      timeout: 5s
      retries: 8
      start_period: 15s

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:2.0.5@sha256:964485823771c102427a0c1cd896cf6b576add6f21bd041498b92cb040ee7270
    container_name: prowlarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Los_Angeles
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/prowlarr:/config
    restart: unless-stopped
    # ports:
    #   - 9696:9696
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - --timeout=3
        - --tries=1
        - --spider
        - http://localhost:9696/ping
      interval: 10s
      timeout: 5s
      retries: 8
      start_period: 15s
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.prowlarr.rule=Host(`{{{domainForApp "prowlarr"}}}`)
      - traefik.http.routers.prowlarr.entrypoints=https
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.routers.prowlarr.tls.certresolver=porkbun
      - traefik.http.routers.prowlarr.service=prowlarr
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
    networks:
      - traefik

  sonarr:
    image: ghcr.io/linuxserver/sonarr:4.0.15@sha256:328d322af2bb8d7211a9c43a26ff5e658ba3e6f47a695e8fb9ff806bfeab0f04
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Los_Angeles
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/sonarr:/config
      - /mnt/media:/data
    # ports:
    #   - 8989:8989
    depends_on:
      qbittorrent:
        condition: service_healthy
        restart: true
      sabnzbd:
        condition: service_healthy
        restart: true
      prowlarr:
        condition: service_healthy
        restart: true
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - --timeout=3
        - --tries=1
        - --spider
        - http://localhost:8989/ping
      interval: 5s
      timeout: 4s
      retries: 4
      start_period: 5s
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.sonarr.rule=Host(`{{{domainForApp "sonarr"}}}`)
      - traefik.http.routers.sonarr.entrypoints=https
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=porkbun
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
    networks:
      - traefik

  radarr:
    image: ghcr.io/linuxserver/radarr:5.27.5@sha256:f174546a0ad7eb9a9170e4142bef6f74ef3ebfe6209528fded40630369406dc0
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Los_Angeles
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/radarr:/config
      - /mnt/media:/data
    # ports:
    #   - 7878:7878
    depends_on:
      qbittorrent:
        condition: service_healthy
        restart: true
      sabnzbd:
        condition: service_healthy
        restart: true
      prowlarr:
        condition: service_healthy
        restart: true
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - --timeout=3
        - --tries=1
        - --spider
        - http://localhost:7878/ping
      interval: 5s
      timeout: 4s
      retries: 4
      start_period: 5s
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.radarr.rule=Host(`{{{domainForApp "radarr"}}}`)
      - traefik.http.routers.radarr.entrypoints=https
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=porkbun
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.services.radarr.loadbalancer.server.port=7878
    networks:
      - traefik

  bazarr:
    image: ghcr.io/linuxserver/bazarr:1.5.3@sha256:005f97fcab0fd7402cd7ff3c09f5ff4da4c63ca51be487e90d5c4dc8a8f85a45
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=0
      - PGID=0
      - TZ=America/Los_Angeles
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/bazarr:/config
      - /mnt/media:/data
    # ports:
    #   - 6767:6767
    depends_on:
      sonarr:
        condition: service_healthy
        restart: true
      radarr:
        condition: service_healthy
        restart: true
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - --timeout=3
        - --tries=1
        - --spider
        - http://127.0.0.1:6767
      interval: 5s
      timeout: 4s
      retries: 4
      start_period: 5s
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.bazarr.rule=Host(`{{{domainForApp "bazarr"}}}`)
      - traefik.http.routers.bazarr.entrypoints=https
      - traefik.http.routers.bazarr.tls=true
      - traefik.http.routers.bazarr.tls.certresolver=porkbun
      - traefik.http.routers.bazarr.service=bazarr
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
    networks:
      - traefik

  subsyncarr:
    image: mrorbitman/subsyncarr:0.0.8@sha256:5185ff4d403e1267fc38a30dcf13c631ebf4ff0e56a8bbb1dc1da70996bf2b83
    container_name: subsyncarr
    user: 0:0
    volumes:
      - /mnt/media/movies:/movies
      - /mnt/media/tv:/tv
    restart: unless-stopped
    environment:
      - TZ=America/Los_Angeles
      - CRON_SCHEDULE=0 0 * * *
      - SCAN_PATHS=/movies,/tv # Remember to mount these as volumes. Must begin with /. Default value is '/scan_dir'
      # - EXCLUDE_PATHS=/movies/temp,/tv/downloads # Exclude certain sub-directories from the scan
      - MAX_CONCURRENT_SYNC_TASKS=1 # Defaults to 1 if not set. Higher number will consume more CPU but sync your library faster
      - INCLUDE_ENGINES=ffsubsync,autosubsync # If not set, all engines are used by default

  profilarr:
    image: santiagosayshey/profilarr:v1.1.3@sha256:c8ad91a8e5d60b3816321b3a1f68332b29a23f910f6bd2c2d7b4a83f881f032f
    container_name: profilarr
    user: 0:0
    # ports:
    #   - 6868:6868
    volumes:
      - /docker/profilarr:/config
    environment:
      - TZ=America/Los_Angeles
    restart: unless-stopped
    depends_on:
      sonarr:
        condition: service_healthy
        restart: true
      radarr:
        condition: service_healthy
        restart: true
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.profilarr.rule=Host(`{{{domainForApp "profilarr"}}}`)
      - traefik.http.routers.profilarr.entrypoints=https
      - traefik.http.routers.profilarr.tls=true
      - traefik.http.routers.profilarr.tls.certresolver=porkbun
      - traefik.http.routers.profilarr.service=profilarr
      - traefik.http.services.profilarr.loadbalancer.server.port=6868
    networks:
      - traefik
    # healthcheck:
    #   test:
    #     - CMD
    #     - wget
    #     - --quiet
    #     - --timeout=3
    #     - --tries=1
    #     - --spider
    #     - http://127.0.0.1:6868
    #   interval: 5s
    #   timeout: 4s
    #   retries: 4
    #   start_period: 5s

  cleanuparr:
    image: ghcr.io/cleanuparr/cleanuparr:2.3.3@sha256:d20efe405d4144e87736c25123cd22992fa4a76c9d80d7467ca5313b92107e4a
    container_name: cleanuparr
    restart: unless-stopped
    depends_on:
      sonarr:
        condition: service_healthy
        restart: true
      radarr:
        condition: service_healthy
        restart: true
      # lidarr:
      #   condition: service_healthy
      #   restart: true
      qbittorrent:
        condition: service_healthy
        restart: true
      sabnzbd:
        condition: service_healthy
        restart: true
    # ports:
    #   - 11011:11011
    volumes:
      - /docker/cleanuparr:/config
      - /mnt/media:/data
    # https://cleanuparr.github.io/Cleanuparr/docs/installation/detailed#environment-variables
    environment:
      - PORT=11011
      - BASE_PATH=
      - PUID=0
      - PGID=0
      - UMASK=022
      - TZ=America/Los_Angeles
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11011/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.cleanuparr.rule=Host(`{{{domainForApp "cleanuparr"}}}`)
      - traefik.http.routers.cleanuparr.entrypoints=https
      - traefik.http.routers.cleanuparr.tls=true
      - traefik.http.routers.cleanuparr.tls.certresolver=porkbun
      - traefik.http.routers.cleanuparr.service=cleanuparr
      - traefik.http.services.cleanuparr.loadbalancer.server.port=11011
    networks:
      - traefik

  huntarr:
    image: huntarr/huntarr:8.2.10@sha256:b5a47c2b43806165f433d308d69a21e74a687ce59f4fcccb612d6a7acb3af6d7
    container_name: huntarr
    restart: unless-stopped
    # ports:
    #   - "9705:9705"
    depends_on:
      sonarr:
        condition: service_healthy
        restart: true
      radarr:
        condition: service_healthy
        restart: true
      # lidarr:
      #   condition: service_healthy
      #   restart: true
      qbittorrent:
        condition: service_healthy
        restart: true
      sabnzbd:
        condition: service_healthy
        restart: true
    volumes:
      - /docker/huntarr:/config
    environment:
      - TZ=America/Los_Angeles
    labels:
      - deunhealth.restart.on.unhealthy=true
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.huntarr.rule=Host(`{{{domainForApp "huntarr"}}}`)
      - traefik.http.routers.huntarr.entrypoints=https
      - traefik.http.routers.huntarr.tls=true
      - traefik.http.routers.huntarr.tls.certresolver=porkbun
      - traefik.http.routers.huntarr.service=huntarr
      - traefik.http.services.huntarr.loadbalancer.server.port=9705
    networks:
      - traefik

networks:
  traefik:
    external: true
